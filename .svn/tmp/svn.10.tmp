package cn.com.cdboost.charge.merchant.service.impl;

import cn.com.cdboost.charge.base.util.DateUtil;
import cn.com.cdboost.charge.base.vo.PageData;
import cn.com.cdboost.charge.merchant.common.BaseServiceImpl;
import cn.com.cdboost.charge.merchant.constant.IcCardConstant;
import cn.com.cdboost.charge.merchant.dao.CardMapper;
import cn.com.cdboost.charge.merchant.model.Card;
import cn.com.cdboost.charge.merchant.service.IIcCardService;
import cn.com.cdboost.charge.merchant.vo.dto.IcCardListDto;
import cn.com.cdboost.charge.merchant.vo.param.IcCardParam;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.google.common.collect.Lists;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.CollectionUtils;
import org.springframework.util.StringUtils;
import tk.mybatis.mapper.entity.Condition;
import tk.mybatis.mapper.entity.Example;

import java.util.Date;
import java.util.List;

@Service
public class IIcCardServiceImpl extends BaseServiceImpl<Card> implements IIcCardService{
    @Autowired
    private CardMapper cardMapper;
    @Override
    public void bindingCustomer(String cardId, String customerGuid,String userPhone) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setCustomerGuid(customerGuid);
        card.setUpdateTime(new Date());
        if (!StringUtils.isEmpty(userPhone)){
            card.setCustomerContact(userPhone);
        }
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }

    @Override
    public void unbind(String cardId) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setCustomerGuid("");
        card.setUpdateTime(new Date());
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }

    @Override
    public void cancelCard(String cardId) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setUpdateTime(new Date());
        card.setCardState(IcCardConstant.ICcardStatus.DISABLE.getStatus());
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }

    @Override
    public PageData<IcCardListDto> queryIcList(IcCardParam param) {
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        if (param.getCardState() != null){
            criteria.andEqualTo("cardState",param.getCardState());
        }
        if (param.getCardOwe() != null){
            criteria.andEqualTo("cardOwe",param.getCardOwe());
        }
        if (!StringUtils.isEmpty(param.getProjectGuid())){
            criteria.andEqualTo("projectGuid",param.getProjectGuid());
        }
        if (!StringUtils.isEmpty(param.getMerchantGuid())){
            criteria.andEqualTo("merchantGuid",param.getMerchantGuid());
        }
        if (!CollectionUtils.isEmpty(param.getProjectGuids())){
            criteria.andIn("projectGuid",param.getProjectGuids());
        }
        PageHelper.startPage(param.getPageNumber(),param.getPageSize(),"id desc");
        List<Card> cards = cardMapper.selectByCondition(condition);
        PageInfo<Card> pageInfo = new PageInfo<>(cards);
        List<IcCardListDto> cardListDtos = Lists.newArrayList();
        for (Card card : cards) {
            IcCardListDto dto = new IcCardListDto();
            BeanUtils.copyProperties(card,dto);
            dto.setCreateTime(DateUtil.formatDate(card.getCreateTime()));
            dto.setUpdateTime(DateUtil.formatDate(card.getUpdateTime()));
            cardListDtos.add(dto);
        }
        PageData pageData = new PageData();
        pageData.setTotal(pageInfo.getTotal());
        pageData.setList(cardListDtos);
        return pageData;
    }
}
