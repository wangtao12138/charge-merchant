package cn.com.cdboost.charge.merchant.service.impl;

import cn.com.cdboost.charge.merchant.common.BaseServiceImpl;
import cn.com.cdboost.charge.merchant.constant.IcCardConstant;
import cn.com.cdboost.charge.merchant.dao.CardMapper;
import cn.com.cdboost.charge.merchant.model.Card;
import cn.com.cdboost.charge.merchant.service.IIcCardService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import tk.mybatis.mapper.entity.Condition;
import tk.mybatis.mapper.entity.Example;

import java.util.Date;

@Service
public class IIcCardServiceImpl extends BaseServiceImpl<Card> implements IIcCardService{
    @Autowired
    private CardMapper cardMapper;
    @Override
    public void bindingCustomer(String cardId, String customerGuid,String userPhone) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setCustomerGuid(customerGuid);
        card.setUpdateTime(new Date());
        if (!StringUtils.isEmpty(userPhone)){
            card.setCustomerContact(userPhone);
        }
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }

    @Override
    public void unbind(String cardId) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setCustomerGuid("");
        card.setUpdateTime(new Date());
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }

    @Override
    public void cancelCard(String cardId) {
        Card card = new Card();
        card.setCardId(cardId);
        card.setUpdateTime(new Date());
        card.setCardState(IcCardConstant.ICcardStatus.DISABLE.getStatus());
        Condition condition = new Condition(Card.class);
        Example.Criteria criteria = condition.createCriteria();
        criteria.andEqualTo("cardId",cardId);
        cardMapper.updateByConditionSelective(card,condition);
    }
}
