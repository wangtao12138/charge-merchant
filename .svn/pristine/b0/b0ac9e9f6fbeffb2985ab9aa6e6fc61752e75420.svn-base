server:
  #端口号
  port: 8095
  servlet:
    context-path: /springboot
# 环境切换 dev开发环境、test测试环境、prod生产环境
spring:
  profiles:
    active: @filter-resource-name@

---
#开发环境配置
#spring:
#  profiles: dev
#server:
#  port: 8081

#---
#测试环境配置
#spring:
#  profiles: test
#server:
#  port: 8082

#---
#生产环境配置
#spring:
#  profiles: prod
#server:
#  port: 8083


################## Mybatis配置
mybatis:
  type-aliases-package: cn.com.cdboost.charge.trade.model
  mapper-locations: classpath*:/mapper/*Mapper.xml


################## Mapper
mapper:
  mappers: cn.com.cdboost.charge.merchant.common.CommonMapper
  not-empty: false
  identity: MYSQL

################## PageHelper
pagehelper:
  helperDialect: mysql
pagehelper:
  reasonable: true  #为了使用输入页数为负或者超出最大页时候使页数为最小或最大值
pagehelper:
  supportMethodsArguments: true
pagehelper:
  params: count=countSql

spring:
  application:
    name: springboot-dubbo
#management.port = 9091

################## Dubbo配置
dubbo:
  scan:
    basePackages: cn.com.cdboost.charge.merchant.service

## ApplicationConfig Bean
  application:
    #注册在注册中心的名称，唯一标识，请勿重复
    id: charge-merchant-service
    name: charge-merchant-service

## ProtocolConfig Bean
  protocol:
    id: dubbo
    name: dubbo
    #暴露服务端口 （默认是20880，修改端口，不同的服务提供者端口不能重复）
    port: 20881

## RegistryConfig Bean
  registry:
    id: charge-merchant-registry
    # 单zookeeper服务
    address: zookeeper://127.0.0.1:2181
    # 多zookeeper服务
    # address: zookeeper://127.0.0.1:2181?backup=127.0.0.1:2180,127.0.0.1:2182

################## Druid Datasource配置
spring:
  datasource:
    druid:
      # 驱动配置信息
#      db-type: com.alibaba.druid.pool.DruidDataSource
#      driver-class-name: com.mysql.cj.jdbc.Driver
#      url: jdbc:mysql://10.1.3.123:3306/sm_metercollect_design_zt?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia%2FShanghai&useSSL=true&allowMultiQueries=true&nullNamePatternMatchesAll=true
#      username: sa_pda
#      password: emerp@250.123

      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j

      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat:
          enable: true
          merge-sql: true
          log-slow-sql: true
          slow-sql-millis: 2000
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true


      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      # 是否启用StatFilter默认值true
      web-stat-filter:
        enabled: true
        # 设置不统计哪些URL
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'


      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      # 是否启用StatViewServlet默认值true
      stat-view-servlet:
        enabled: true
        # 禁止手动重置监控数据
        reset-enable: false
        url-pattern: /druid/*
        reset-enable: false
        # 设置监控页面的登录名和密码
        login-username: admin
        login-password: 123456
        # IP白名单 ,默认就是允许所有访问
        allow:
        # IP黑名单 (存在共同时，deny优先于allow)
        deny:

      # 其他进阶配置：
      # Spring监控，对内部各接口调用的监控
      aop-patterns: cn.com.cdboost.charge.merchant.service.*,cn.com.cdboost.charge.merchant.dao.*



